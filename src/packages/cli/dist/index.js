#!/usr/bin/env node
var P=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(p,w)=>(typeof require<"u"?require:p)[w]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});import{Command as S}from"commander";import f from"chalk";import A from"figlet";import h from"inquirer";import n from"fs";import o from"path";import y from"ora";import{execSync as b}from"child_process";import{fileURLToPath as F}from"url";import{dirname as I}from"path";var j=F(import.meta.url),C=I(j);console.log(f.yellow(A.textSync("AgentGenesis",{horizontalLayout:"full"})));var $=new S;$.version("1.0.0").description("My Node CLI");$.command("add <component>").description("Add a specified component inside the utils/agentgenesis folder").action(async t=>{let p=[{type:"input",name:"rootPath",message:"What is the root path of your project?",default:process.cwd(),validate:e=>n.existsSync(e)?!0:"The path you entered does not exist. Please enter a valid path."}],l=(await h.prompt(p)).rootPath,s=e=>{try{return P.resolve(o.join(l,"node_modules",e)),!0}catch{return!1}},a=async(e,r,g)=>{let{[`install${r}`]:m}=await h.prompt([{type:"confirm",name:`install${r}`,message:`'${r}' requires '${e}'. Would you like to install it now?`,default:!0}]);if(m){let v=y(`Installing ${e}...`).start();try{return b(g,{stdio:"inherit",cwd:l}),v.succeed(`Successfully installed ${e}.`),!0}catch(x){return v.fail(`Failed to install ${e}: ${x.message}`),!1}}else return console.log(f.red(`'${r}' cannot be added without '${e}'. Please install it and try again.`)),!1};if(!await(async()=>{let e="agentgenesisfaisal";if(!s(e)){let{installAgentgenesisfaisal:r}=await h.prompt([{type:"confirm",name:"installAgentgenesisfaisal",message:`'${e}' is not installed. Would you like to install it now?`,default:!0}]);if(r){let g=y(`Installing ${e}...`).start();try{return b(`npm install ${e}`,{stdio:"inherit",cwd:l}),g.succeed(`Successfully installed ${e}.`),!0}catch(m){return g.fail(`Failed to install ${e}: ${m.message}`),!1}}else return console.log(f.red(`Cannot proceed without '${e}'. Please install it and try again.`)),!1}return!0})())return;switch(t){case"calculatortool":if(!s("expr-eval")&&!await a("expr-eval","expr-eval","npm install expr-eval"))return;break;case"chatOpenAI":case"openAIEmbeddings":if(!s("openai")&&!await a("openai","openai","npm install openai"))return;break;case"chatAnthropic":if(!s("@anthropic-ai/sdk")&&!await a("@anthropic-ai/sdk","@anthropic-ai/sdk","npm install @anthropic-ai/sdk"))return;break;case"chatGemini":case"geminiEmbeddings":if(!s("@google/generative-ai")&&!await a("@google/generative-ai","@google/generative-ai","npm install @google/generative-ai"))return;break;case"reranker":if(!s("cohere-ai")&&!await a("cohere-ai","reranker","npm install -s cohere-ai"))return;break;case"unstructuredLoader":if(!s("unstructured-client")&&!await a("unstructured-client","unstructured-client","npm install unstructured-client --include=dev"))return;break;default:console.log(f.red(`Unknown component '${t}'. Please choose a valid component.`));return}let c=o.join(l,"utils"),d=o.join(c,"agentgenesis"),u=o.join(d,`${t}.ts`),k=o.join(C,"components",`${t}.ts`),i=y(`Adding ${t} to your project...`).start();try{if(!n.existsSync(k)){i.fail(`Template for '${t}' not found.`);return}n.existsSync(c)||(n.mkdirSync(c),i.succeed(`Created 'utils' folder at ${c}.`)),n.existsSync(d)||(n.mkdirSync(d),i.succeed(`Created 'agentgenesis' folder at ${d}.`));let e=n.readFileSync(k,"utf-8");n.existsSync(u)?i.warn(`'${t}.ts' already exists at ${u}.`):(n.writeFileSync(u,e),i.succeed(`Created '${t}.ts' at ${u}.`))}catch(e){i.fail(`Failed to add ${t}: ${e.message}`)}});$.parse(process.argv);
//# sourceMappingURL=index.js.map